version: "3"
services:
  # ===================
  # nginx用コンテナ設定
  # ===================
  nginx:
    # Nginxコンテナに使用するイメージを指定
    image: nginx:1.15.6
    # <ホストマシンのポート>:<コンテナのポート>
    ports:
      - "8080:80"
    # phpコンテナと紐づけ
    depends_on:
      - php
    # <ホストマシン側のパス>:<コンテナ側のパス>
    volumes:
      - ./docker/server/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/html

  # ====================
  # laravel用コンテナ設定
  # ====================
  php:
    # 指定したディレクトリ内のDockerfileを実行
    build: ./docker/php
    # <ホストマシン側のパス>:<コンテナ側のパス>
    ports:
      - "5174:5174"
    volumes:
      # php.iniのマウント
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      # ドキュメントルートのマウント
      - .:/var/www/html
      # xdebugの設定をマウント
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      # xdebug.logの出力先をマウント
      - ./docker/php/log:/var/log
      # 下2つはマウントから外すことで高速化に繋がるらしい
      - /src/node_modules
      - /src/vendor
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # ========================
  # PostgreSQL用コンテナ設定
  # ========================
  postgres:
    image: postgres:latest
    # コンテナの自動再起動
    restart: always
    # コンテナ内での環境変数
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGPASSWORD: password123
      POSTGRES_DB: sample
      TZ: "Asia/Tokyo"
    # <ホストマシンのポート>:<コンテナのポート>
    ports:
      - 5434:5432
    # <ホストマシン側のパス>:<コンテナ側のパス>
    volumes:
      - postgres:/var/lib/postgresql/data

  # ==================================================
  # pgAdmin(PostgreSQL操作用のGUIツール)用コンテナ設定
  # ==================================================
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 82:80
    environment:
      # ログインする際に使用
      PGADMIN_DEFAULT_EMAIL: developer@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

# 他のコンテナからpostgresなどのコンテナを参照できるようにする
volumes:
  postgres:
  pgadmin:
